int dataPinA1=9;
int latchPinA1=10;
int clockPinA1=8;

int dataPinA2=12;
int latchPinA2=13;
int clockPinA2=11;

int dataPinK=3;
 int latchPinK=4;
 int clockPinK=2;
 
 int k=-1;

byte Kathode[]={
 0b01111111,
 0b10111111,
 0b11011111,
 0b11101111,
 0b11110111,
 0b11111011,
 0b11111101,
 0b11111110,
 };

//アノード初期設定
byte Anode01 =0b00000000;
byte Anode02 =0b00000000;
byte Anode03 =0b00000000;
byte Anode04 =0b00000000;
byte Anode05 =0b00000000;
byte Anode06 =0b00000000;
byte Anode07 =0b00000000;
byte Anode08 =0b00000000;
byte Anode09 =0b00000000;
byte Anode010 =0b00000000;
byte Anode011 =0b00000000;
byte Anode012=0b00000000;
byte Anode013 =0b00000000;
byte Anode014 =0b00000000;

byte Anode11 =0b00000000;
byte Anode12 =0b00000000;
byte Anode13 =0b00000000;
byte Anode14 =0b00000000;
byte Anode15 =0b00000000;
byte Anode16 =0b00000000;
byte Anode17 =0b00000000;
byte Anode18 =0b00000000;
byte Anode19 =0b00000000;
byte Anode110 =0b00000000;
byte Anode111 =0b00000000;
byte Anode112 =0b00000000;
byte Anode113 =0b00000000;
byte Anode114 =0b00000000;

 boolean b[120][8] = {                     

{0,1,1,1,1,1,1,1,},
{0,0,0,0,0,0,0,0,},
{0,1,1,1,1,1,1,1,},
{0,1,0,1,0,0,0,0,},
{0,1,1,0,1,0,0,0,},
{0,1,0,1,0,1,0,0,},
{0,1,0,0,1,0,0,0,},
{0,0,0,0,0,0,0,0,},//1

{0,0,1,1,1,1,1,1,},
{0,0,1,0,0,0,0,0,},
{0,0,1,0,0,0,0,0,},
{0,0,1,1,1,1,1,1,},
{0,0,1,0,0,0,0,0,},
{0,0,1,0,0,0,0,0,},
{0,0,1,1,1,1,1,1,},
{0,0,0,0,0,0,0,0,},//2

{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,1,1,1,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,1,1,1,1,1,1,1,},
{0,0,0,0,0,0,0,0,},//3

{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,1,0,0,},
{0,0,0,0,0,0,1,0,},
{0,0,0,0,0,0,0,1,},
{0,0,0,0,0,0,0,0,},//4

{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,1,1,1,1,1,},
{0,0,0,0,0,0,0,1,},
{0,0,0,0,0,0,0,1,},
{0,0,0,0,0,0,0,1,},//5

{0,0,0,0,0,0,0,1,},
{0,0,0,0,0,0,0,1,},
{0,1,1,1,1,1,1,1,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},//6

{0,0,0,0,0,0,0,0,},
{0,0,0,1,0,0,1,0,},
{0,0,0,0,1,0,0,1,},
{0,0,1,1,1,1,1,1,},
{0,0,1,0,0,0,0,0,},
{0,0,0,0,0,1,1,1,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},	//学　左上

{0,0,0,0,1,1,1,1,}, 
{0,0,0,0,0,0,0,1,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,1,0,},
{0,0,0,0,0,0,0,1,},
{0,0,0,0,0,0,0,0,}, 	//学　左下

{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,1,1,1,1,1,1,0,},
{0,0,0,0,1,0,0,0,},
{0,0,0,0,1,0,0,0,},
{0,0,0,1,0,0,0,0,},
{0,0,0,1,0,0,0,0,},
{0,0,1,1,1,1,1,0,},	//研　左上

{0,1,1,0,0,0,1,0,}, 
{1,0,1,0,0,0,1,0,},
{0,0,1,0,0,0,1,0,},
{0,0,1,0,0,0,1,0,},
{0,0,1,1,1,1,1,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,}, 	//研　左下

{0,0,0,0,0,0,0,0,}, 
{0,0,0,0,0,0,0,0,},
{0,0,1,1,1,1,1,1,},
{0,0,1,0,0,0,0,0,},
{0,0,1,0,0,0,1,0,},
{0,0,0,0,0,0,1,0,},
{0,0,0,0,0,1,0,0,},
{0,0,0,0,1,0,0,0,},//究　左上

{0,0,0,0,0,0,1,0,}, 
{0,0,0,0,0,1,1,1,},
{0,0,0,0,0,0,1,0,},
{0,0,0,0,0,0,1,0,},
{0,0,0,0,0,1,0,0,},
{0,0,0,0,0,1,0,0,},
{0,0,0,0,1,0,0,0,},
{0,0,0,0,0,0,0,0,},//究　左下

{0,0,0,0,0,0,0,0,}, 
{0,0,0,0,0,0,1,0,},
{0,0,0,0,0,0,1,0,},
{0,0,1,1,1,1,1,1,},
{0,0,0,1,0,0,1,0,},
{0,0,0,1,0,0,1,0,},
{0,0,0,0,1,1,0,0,},
{0,1,1,1,1,1,1,1,},//部　左上

{0,0,0,0,0,0,0,0,}, 
{0,0,0,1,1,1,1,0,},
{0,0,0,1,0,0,1,0,},
{0,0,0,1,0,0,1,0,},
{0,0,0,1,1,1,1,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,},//部　左下


 {0,1,1,1,1,1,1,1,},
{0,0,0,0,0,0,0,0,},
{0,1,1,1,1,1,1,1,},
{0,1,0,1,0,0,0,0,},
{0,1,1,0,1,0,0,0,},
{0,1,0,1,0,1,0,0,},
{0,1,0,0,1,0,0,0,},
{0,0,0,0,0,0,0,0,},//1
 };


void setup() {

pinMode(latchPinA1, OUTPUT);
pinMode(latchPinA2, OUTPUT);
 pinMode(latchPinK, OUTPUT);

pinMode(clockPinA1, OUTPUT);
pinMode(clockPinA2, OUTPUT);
 pinMode(clockPinK, OUTPUT);

pinMode(dataPinA1, OUTPUT);
pinMode(dataPinA2, OUTPUT);
 pinMode(dataPinK, OUTPUT);

}

void loop() {
      for (int i=0;i<8;i++){
 
//*******************************    
      
        bitWrite(Anode01, 7,a[i+k][1]);
          bitWrite(Anode02, 7,a[i+k+8][1]);
          bitWrite(Anode03, 7,a[i+k+16][1]);
          bitWrite(Anode04, 7,a[i+k+24][1]);
          bitWrite(Anode05, 7,a[i+k+32][1]);
          bitWrite(Anode06, 7,a[i+k+40][1]);
           bitWrite(Anode07, 7,a[i+k+48][1]);
            bitWrite(Anode08, 7,a[i+k+56][1]);
             bitWrite(Anode09, 7,a[i+k+64][1]);
              bitWrite(Anode010, 7,a[i+k+72][1]);
               bitWrite(Anode011, 7,a[i+k+80][1]);
                bitWrite(Anode012, 7,a[i+k+88][1]);
                 bitWrite(Anode013, 7,a[i+k+96][1]);
                  bitWrite(Anode014, 7,a[i+k+104][1]);
          
         bitWrite(Anode01, 6,a[i+k][0]);
          bitWrite(Anode02, 6,a[i+k+8][0]);
          bitWrite(Anode03, 6,a[i+k+16][0]);
          bitWrite(Anode04, 6,a[i+k+24][0]);
          bitWrite(Anode05, 6,a[i+k+32][0]);
          bitWrite(Anode06, 6,a[i+k+40][0]);
           bitWrite(Anode07, 6,a[i+k+48][0]);
            bitWrite(Anode08, 6,a[i+k+56][0]);
             bitWrite(Anode09, 6,a[i+k+64][0]);
              bitWrite(Anode010, 6,a[i+k+72][0]);
               bitWrite(Anode011, 6,a[i+k+80][0]);
                bitWrite(Anode012, 6,a[i+k+88][0]);
                 bitWrite(Anode013, 6,a[i+k+96][0]);
                  bitWrite(Anode014, 6,a[i+k+104][0]);
          
          bitWrite(Anode11, 7,b[i+k][1]);
          bitWrite(Anode12, 7,b[i+k+8][1]);
          bitWrite(Anode13, 7,b[i+k+16][1]);
          bitWrite(Anode14, 7,b[i+k+24][1]);
          bitWrite(Anode15, 7,b[i+k+32][1]);
          bitWrite(Anode16, 7,b[i+k+40][1]);
          bitWrite(Anode07, 7,b[i+k+48][1]);
            bitWrite(Anode18, 7,b[i+k+56][1]);
             bitWrite(Anode19, 7,b[i+k+64][1]);
              bitWrite(Anode110, 7,b[i+k+72][1]);
               bitWrite(Anode111, 7,b[i+k+80][1]);
                bitWrite(Anode112, 7,b[i+k+88][1]);
                 bitWrite(Anode113, 7,b[i+k+96][1]);
                  bitWrite(Anode114, 7,b[i+k+104][1]);
          
         bitWrite(Anode11, 6,b[i+k][0]);
          bitWrite(Anode12, 6,b[i+k+8][0]);
          bitWrite(Anode13, 6,b[i+k+16][0]);
          bitWrite(Anode14, 6,b[i+k+24][0]);
          bitWrite(Anode15, 6,b[i+k+32][0]);
          bitWrite(Anode16, 6,b[i+k+40][0]);
          bitWrite(Anode17, 6,b[i+k+48][0]);
            bitWrite(Anode18, 6,b[i+k+56][0]);
             bitWrite(Anode19, 6,b[i+k+64][0]);
              bitWrite(Anode110, 6,b[i+k+72][0]);
               bitWrite(Anode111, 6,b[i+k+80][0]);
                bitWrite(Anode112, 6,b[i+k+88][0]);
                 bitWrite(Anode113, 6,b[i+k+96][0]);
                  bitWrite(Anode114, 6,b[i+k+104][0]);
      
       for (int j=0;j<6;j++){         
          bitWrite(Anode01, j,a[i+k][7-j]);
          bitWrite(Anode02, j,a[i+k+8][7-j]);
          bitWrite(Anode03, j,a[i+k+16][7-j]);
          bitWrite(Anode04, j,a[i+k+24][7-j]);
          bitWrite(Anode05, j,a[i+k+32][7-j]);
          bitWrite(Anode06, j,a[i+k+40][7-j]);
          bitWrite(Anode07, j,a[i+k+48][7-j]);
            bitWrite(Anode08, j,a[i+k+56][7-j]);
             bitWrite(Anode09, j,a[i+k+64][7-j]);
              bitWrite(Anode010, j,a[i+k+72][7-j]);
               bitWrite(Anode011, j,a[i+k+80][7-j]);
                bitWrite(Anode012, j,a[i+k+88][7-j]);
                 bitWrite(Anode013, j,a[i+k+96][7-j]);
                  bitWrite(Anode014, j,a[i+k+104][7-j]);
          
          bitWrite(Anode11, j,b[i+k][7-j]);
          bitWrite(Anode12, j,b[i+k+8][7-j]);
          bitWrite(Anode13, j,b[i+k+16][7-j]);
          bitWrite(Anode14, j,b[i+k+24][7-j]);
          bitWrite(Anode15, j,b[i+k+32][7-j]);
          bitWrite(Anode16, j,b[i+k+40][7-j]);
         bitWrite(Anode17, j,b[i+k+48][7-j]);
            bitWrite(Anode18, j,b[i+k+56][7-j]);
             bitWrite(Anode19, j,b[i+k+64][7-j]);
              bitWrite(Anode110, j,b[i+k+72][7-j]);
               bitWrite(Anode111, j,b[i+k+80][7-j]);
                bitWrite(Anode112, j,b[i+k+88][7-j]);
                 bitWrite(Anode113, j,b[i+k+96][7-j]);
                  bitWrite(Anode114, j,b[i+k+104][7-j]);
    } 
    
//**************************************     
     digitalWrite(latchPinA1, LOW);
       digitalWrite(latchPinA2, LOW);
      digitalWrite(latchPinK, LOW);  

      shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode114);
       shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode014);//1
      shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode113);
       shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode013);//1
      shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode112);
       shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode012);//1
      shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode111);
       shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode011);//1
      shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode110);
       shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode010);//1
      shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode19);
       shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode09);//1
      shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode18);
       shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode08);//1       
      shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode17);
       shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode07);//1 
      
      shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode16);
      shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode06);//6      
      shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode15);
      shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode05);//5       
      shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode14);
     shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode04);//4    
   shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode13); //3
          
       shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode12);  
      shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode02);//2      
      shiftOut(dataPinA2, clockPinA2, MSBFIRST, Anode11);
       shiftOut(dataPinA1, clockPinA1, MSBFIRST, Anode01);//1
     
       
      shiftOut(dataPinK, clockPinK, LSBFIRST, Kathode[i]);
      
      //ここで出力を開始している
      
      digitalWrite(latchPinA1, HIGH);
       digitalWrite(latchPinA2, HIGH);
       digitalWrite(latchPinK, HIGH);

      //上記をハイスピードで繰り返すことで、ダイナミック点灯させる。
     }
   }